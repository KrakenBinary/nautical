from time import time, sleep
from .base import query_all, Endpoint, BASE_ENDPOINT, query_base, NCEIBase
from copy import deepcopy


class Station(NCEIBase):

    elevation = None
    mindate = None
    maxdate = None
    latitude = None
    name = None
    datacoverage = None
    id = None
    elevationUnit = None
    longitude = None


"""
Additional Parameters

    datasetid [Optional] 
        Accepts a valid dataset id or a chain of dataset ids separated by ampersands. Stations 
        returned will be supported by dataset(s) specified
    locationid [Optional]
        Accepts a valid location id or a chain of location ids separated by ampersands. Stations 
        returned will contain data for the location(s) specified
    datacategoryid [Optional] 
        Accepts a valid data category id or an array of data category ids. Stations returned will 
        be associated with the data category(ies) specified
    datatypeid [Optional]
        Accepts a valid data type id or a chain of data type ids separated by ampersands. Stations 
        returned will contain all of the data type(s) specified
    extent [Optional] 
        The desired geographical extent for search. Designed to take a parameter generated by 
        Google Maps API V3 LatLngBounds.toUrlValue. Stations returned must be located within the 
        extent specified.
    startdate [Optional] 
        Accepts valid ISO formated date (yyyy-mm-dd). Stations returned will have data after the 
        specified date. Paramater can be use independently of enddate
    enddate [Optional] 
        Accepts valid ISO formated date (yyyy-mm-dd). Stations returned will have data before the 
        specified date. Paramater can be use independently of startdate
    sortfield [Optional]
        The field to sort results by. Supports id, name, mindate, maxdate, and datacoverage fields
    sortorder [	Optional]
        Which order to sort by, asc or desc. Defaults to asc
    limit [Optional]
        Defaults to 25, limits the number of results in the response. Maximum is 1000
    offset [Optional]
        Defaults to 0, used to offset the resultlist. The example would begin with record 24
"""
station_parameters = (
    "datasetid",
    "locationid",
    "datacategoryid",
    "datatypeid",
    "extent",
    "startdate",
    "enddate",
    "sortfield",
    "sortorder",
    "limit",
    "offset"
)

StationEndpoint = Endpoint(BASE_ENDPOINT + "stations")

    
def get_stations(token, parameters=None):
    """
    Each token can only be used 5 times per second OR 10,000 times per day.
    Find the number of times that are required to grab all data knowing the max
    limit is 1000. 

    :param token:
    """
    return query_all(str(StationEndpoint), token, parameters=parameters, obj_type=Station)

def get_station(token, station_id):
    """
    :param token:
    :param station_id:
    """
    endpoint = deepcopy(StationEndpoint)
    endpoint += station_id
    stations = query_base(endpoint, token, Station)
    
    if len(stations) == 1:
        return stations[0]
    elif len(stations) > 1:
        return stations
    else:
        return None
 
    
        
